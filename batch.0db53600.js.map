{"mappings":"yiCAAA,aAKA,SAASA,EAAMC,GACX,IACIC,EACAC,EAOAC,EACAC,EATAH,EAAQ,qBACRC,EAAY,CACdG,QAAO,+CACPC,MAAO,YACPC,OAAQ,CACNC,YAAW,MAGXL,EAAM,0BACNC,EAAM,gBAyFTJ,EAxFKS,UAAUV,MAAQ,CACtBW,QAAS,C,SAEP,CACEL,QAAO,6DACPM,YAAY,IAGhBC,MAAO,CACLP,QAAO,QACPC,MAAO,YAETO,QAAS,CACP,CAEER,QAAO,2FAEPM,YAAY,EACZJ,OAAQ,CACNO,QAAO,wBACPX,OAAQA,EACRD,UAAWA,EACXD,SAAUA,EACVG,OAAQA,EACRI,YAAW,WAGf,CAEEH,QAAO,mOAEPM,YAAY,EACZJ,OAAQ,CACNO,QAAO,4DAEPX,OAAQA,EACRD,UAAWA,EACXD,SAAUA,EACVG,OAAQA,EACRW,SAAQ,2CAGZ,CAEEV,QAAO,8BACPM,YAAY,EACZJ,OAAQ,CACNO,QAAO,aAGX,CAEET,QAAO,wGAEPM,YAAY,EACZJ,OAAQ,CACNO,QAAO,UACPX,OAAQA,EACRD,UAAWA,EACXD,SAAU,CAACA,E,mCACXG,OAAQA,EACRW,SAAQ,kCACRP,YAAW,WAGf,CAEEH,QAAO,uFAEPM,YAAY,EACZJ,OAAQ,CACNO,QAAO,SACPX,OAAQA,EACRD,UAAWA,EACXU,MAAO,CACLP,QAAO,cACPM,YAAY,EACZL,MAAO,YAETL,SAAUA,EACVG,OAAQA,EACRW,SAAQ,QAIdA,SAAQ,OACRP,YAAW,Q,CArGjBQ,EAAOC,QAAUlB,EACjBA,EAAMmB,YAAc,QACpBnB,EAAMoB,QAAU,E","sources":["node_modules/refractor/lang/batch.js"],"sourcesContent":["'use strict'\n\nmodule.exports = batch\nbatch.displayName = 'batch'\nbatch.aliases = []\nfunction batch(Prism) {\n  ;(function (Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    }\n    var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/\n    var number = /(?:\\b|-)\\d+\\b/\n    Prism.languages.batch = {\n      comment: [\n        /^::.*/m,\n        {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }\n      ],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [\n        {\n          // FOR command\n          pattern:\n            /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /\\b(?:do|in)\\b|^for\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // IF command\n          pattern:\n            /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\n          }\n        },\n        {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        },\n        {\n          // SET command\n          pattern:\n            /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // Other commands\n          pattern:\n            /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }\n      ],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    }\n  })(Prism)\n}\n"],"names":["batch","Prism1","variable","parameter","string","number","pattern","alias","inside","punctuation","languages","comment","lookbehind","label","command","keyword","operator","module","exports","displayName","aliases"],"version":3,"file":"batch.0db53600.js.map"}