{"mappings":"yiCAAA,aAKA,SAASA,EAAIC,IACT,SAAUC,GAWV,IAVA,IAAIC,EAAW,8CAA8CC,OACzDC,EAAY,yCAAyCD,OACrDE,EACF,iGAAiGF,OAC9FG,QAAO,aAAc,WACpB,OAAOJ,C,IAERI,QAAO,cAAe,WACrB,OAAOF,C,IAEJG,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAASA,EAAOC,QAAO,WAAY,WACjC,OAAOD,C,IAGXA,EAASA,EAAOC,QAAO,UAAY,aACnCL,EAAMO,UAAUT,IAAM,CACpBU,QAAS,CACPC,QAAO,0BACPC,QAAQ,GAEV,sBAAuB,CACrBD,QAASE,OACP,2GAA2GT,OAAOG,QAAO,SAEvH,WACE,OAAOD,C,IAGX,KAEFQ,YAAY,EACZF,QAAQ,EACRG,MAAO,sBACPC,OAAQd,EAAMO,UAAUQ,YAE1B,aAAc,CACZN,QAAO,sDACPG,YAAY,GAEdI,SAAU,CACR,CACEP,QAAO,oDACPG,YAAY,GAEd,CACEH,QAAO,2FAEPG,YAAY,EACZE,OAAQ,CACNG,QAAO,YACPD,SAAQ,mBAId,wBAAyB,CACvBP,QAASE,OACP,0CAA0CT,OAAOG,QAAO,SAEtD,WACE,OAAOD,C,IAGX,KAEFQ,YAAY,EACZF,QAAQ,EACRG,MAAO,sBACPC,OAAQd,EAAMO,UAAUQ,YAE1BG,OAAQ,CACNT,QAAO,wBACPC,QAAQ,GAEVO,QAAO,uBACPE,YAAW,aAEd,CA9EC,CA8ECpB,E,CAlFLqB,EAAOC,QAAUvB,EACjBA,EAAIwB,YAAc,MAClBxB,EAAIyB,QAAU,E","sources":["node_modules/refractor/lang/qml.js"],"sourcesContent":["'use strict'\n\nmodule.exports = qml\nqml.displayName = 'qml'\nqml.aliases = []\nfunction qml(Prism) {\n  ;(function (Prism) {\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source\n    var jsExpr =\n      /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source\n        .replace(/<string>/g, function () {\n          return jsString\n        })\n        .replace(/<comment>/g, function () {\n          return jsComment\n        }) // the pattern will blow up, so only a few iterations\n    for (var i = 0; i < 2; i++) {\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\n        return jsExpr\n      })\n    }\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]')\n    Prism.languages.qml = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      'javascript-function': {\n        pattern: RegExp(\n          /((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      'class-name': {\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n        lookbehind: true\n      },\n      property: [\n        {\n          pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^property/,\n            property: /\\w+(?:\\.\\w+)*/\n          }\n        }\n      ],\n      'javascript-expression': {\n        pattern: RegExp(\n          /(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:as|import|on)\\b/,\n      punctuation: /[{}[\\]:;,]/\n    }\n  })(Prism)\n}\n"],"names":["qml","Prism1","Prism","jsString","source","jsComment","jsExpr","replace","i","languages","comment","pattern","greedy","RegExp","lookbehind","alias","inside","javascript","property","keyword","string","punctuation","module","exports","displayName","aliases"],"version":3,"file":"qml.b278f034.js.map"}