{"mappings":"2iCAAA,aAKA,SAASA,EAAKC,IAOV,SAAUC,GACVA,EAAMC,UAAUH,KAAOE,EAAMC,UAAUC,OAAO,QAAS,CACrDC,QAAS,CACPC,QAAO,8BACPC,QAAQ,GAEV,aAAc,CACZD,QAAO,4EAEPE,YAAY,EACZC,OAAQ,CACNC,YAAW,UAGfC,QAAO,mSAEPC,SAAQ,4EAERF,YAAW,iBAEbR,EAAMC,UAAUU,aAAa,OAAQ,WAAY,CAC/C,eAAgB,CACdP,QAAO,KACPQ,MAAO,iBAGX,IAAIC,EAAgB,CAClBT,QAAO,oDACPE,YAAY,EACZC,OAAQ,CACNO,QAAS,CACPV,QAAO,uBACPE,YAAY,EACZC,OAAQP,EAAMC,UAAUH,MAE1BiB,UAAW,CACTX,QAAO,WACPQ,MAAO,wBAINZ,EAAMC,UAAUH,KAAKkB,SAC5B,IAAIC,EACF,MACA,CACE,oDAAoDC,OACpD,sDAAsDA,OACtD,sDAAsDA,OACtD,0DAA0DA,OAC1D,kDAAkDA,QAClDC,KAAK,KACP,IACEC,EACF,sEACGF,OACLlB,EAAMC,UAAUU,aAAa,OAAQ,UAAW,CAC9C,gBAAiB,CACf,CACEP,QAASiB,OACP,KAAKH,OAASD,EAAoB,mBAAmBC,QAEvDb,QAAQ,EACRE,OAAQ,CACNM,cAAeA,EACfS,MAAK,YAGT,CACElB,QAAO,iGAEPE,YAAY,EACZD,QAAQ,EACRE,OAAQ,CACNM,cAAeA,EACfS,MAAK,aAIXC,SAAQ,+BACRC,OAAQ,CACN,CACEpB,QAASiB,OAAO,YAAYH,OAASE,GACrCd,YAAY,EACZD,QAAQ,GAEV,CACED,QAASiB,OACP,oBAAoBH,OAASE,EAAa,aAAaF,QAEzDZ,YAAY,EACZD,QAAQ,IAGZ,oBAAqB,CACnBD,QAAO,gCACPE,YAAY,EACZC,OAAQ,CACNS,SAAQ,SACRP,QAAO,UACP,aAAY,OACZD,YAAW,SAIjBR,EAAMC,UAAUU,aAAa,OAAQ,SAAU,CAC7C,iBAAkB,CAChB,CACEP,QAASiB,OAAO,cAAcH,OAASD,GACvCZ,QAAQ,EACRE,OAAQ,CACNM,cAAeA,EACfY,OAAM,YAGV,CACErB,QAAO,oEAEPC,QAAQ,EACRE,OAAQ,CACNM,cAAeA,EACfY,OAAM,YAGV,CACErB,QAAO,kDACPQ,MAAO,iBACPP,QAAQ,EACRE,OAAQ,CACNQ,UAAW,CACTX,QAAO,kCACPG,OAAQ,CACNiB,OAAM,QACNhB,YAAW,aAGfK,cAAeA,EACfY,OAAM,YAGV,CACErB,QAAO,oDACPQ,MAAO,iBACPP,QAAQ,EACRE,OAAQ,CACNQ,UAAW,CACTX,QAAO,oCACPG,OAAQ,CACNiB,OAAM,QACNhB,YAAW,iBAGfiB,OAAM,aAIZ,kBAAmB,CACjB,CACErB,QAASiB,OAAO,KAAKH,OAASD,GAC9BZ,QAAQ,EACRE,OAAQ,CACNM,cAAeA,EACfa,QAAS,CACPtB,QAAO,UACPQ,MAAO,YAIb,CACER,QAAO,0DACPC,QAAQ,EACRE,OAAQ,CACNM,cAAeA,EACfa,QAAS,CACPtB,QAAO,UACPQ,MAAO,sBAMVZ,EAAMC,UAAUH,KAAK2B,OAC5BzB,EAAMC,UAAUU,aAAa,OAAQ,SAAU,CAC7CgB,QAAO,+OAEPC,SAAQ,iCAEV5B,EAAMC,UAAU4B,GAAK7B,EAAMC,UAAUH,IACtC,CA3LC,CA2LCC,E,CArML+B,EAAOC,QAAUjC,EACjBA,EAAKkC,YAAc,OACnBlC,EAAKmC,QAAU,CAAC,K","sources":["node_modules/refractor/lang/ruby.js"],"sourcesContent":["'use strict'\n\nmodule.exports = ruby\nruby.displayName = 'ruby'\nruby.aliases = ['rb']\nfunction ruby(Prism) {\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *     constant, builtin, variable, symbol, regex\n   */\n  ;(function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n        greedy: true\n      },\n      'class-name': {\n        pattern:\n          /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword:\n        /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n      operator:\n        /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n      punctuation: /[(){}[\\].,;]/\n    })\n    Prism.languages.insertBefore('ruby', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    var interpolation = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        content: {\n          pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n    delete Prism.languages.ruby.function\n    var percentExpression =\n      '(?:' +\n      [\n        /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n        /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n        /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n        /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n        /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n      ].join('|') +\n      ')'\n    var symbolName =\n      /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/\n        .source\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      'regex-literal': [\n        {\n          pattern: RegExp(\n            /%r/.source + percentExpression + /[egimnosux]{0,6}/.source\n          ),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: [\n        {\n          pattern: RegExp(/(^|[^:]):/.source + symbolName),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'method-definition': {\n        pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n        lookbehind: true,\n        inside: {\n          function: /\\b\\w+$/,\n          keyword: /^self\\b/,\n          'class-name': /^\\w+/,\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'string', {\n      'string-literal': [\n        {\n          pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?/\n              }\n            },\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?'|'$/\n              }\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      'command-literal': [\n        {\n          pattern: RegExp(/%x/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        },\n        {\n          pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        }\n      ]\n    })\n    delete Prism.languages.ruby.string\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin:\n        /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n    })\n    Prism.languages.rb = Prism.languages.ruby\n  })(Prism)\n}\n"],"names":["ruby","Prism1","Prism","languages","extend","comment","pattern","greedy","lookbehind","inside","punctuation","keyword","operator","insertBefore","alias","interpolation","content","delimiter","function","percentExpression","source","join","symbolName","RegExp","regex","variable","symbol","string","command","builtin","constant","rb","module","exports","displayName","aliases"],"version":3,"file":"ruby.6f799e4a.js.map"}