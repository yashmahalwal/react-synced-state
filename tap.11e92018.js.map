{"mappings":"yiCAAA,aACA,IAAIA,EAAgBC,EAAQ,aAI5B,SAASC,EAAIC,GACXA,EAAMC,SAASJ,GAEfG,EAAME,UAAUH,IAAM,CACpBI,KAAI,mBACJC,KAAI,eACJC,OAAM,oBACNC,QAAO,eACPC,QAAO,mBACPC,KAAI,yBACJC,QAAS,CACPC,QAAO,qBACPC,QAAQ,GAEVC,YAAW,OACXC,UAAS,MACTC,QAAS,CACPJ,QAAO,2CACPK,YAAY,EACZC,OAAQhB,EAAME,UAAUe,KACxBC,MAAO,iB,CAvBbC,EAAOC,QAAUrB,EACjBA,EAAIsB,YAAc,MAClBtB,EAAIuB,QAAU,E","sources":["node_modules/refractor/lang/tap.js"],"sourcesContent":["'use strict'\nvar refractorYaml = require('./yaml.js')\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.register(refractorYaml)\n  // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n"],"names":["refractorYaml","require","tap","Prism","register","languages","fail","pass","pragma","bailout","version","plan","subtest","pattern","greedy","punctuation","directive","yamlish","lookbehind","inside","yaml","alias","module","exports","displayName","aliases"],"version":3,"file":"tap.11e92018.js.map"}