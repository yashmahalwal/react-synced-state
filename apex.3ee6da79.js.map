{"mappings":"yiCAAA,aACA,IAAIA,EAAeC,EAAQ,YAI3B,SAASC,EAAKC,GACZA,EAAMC,SAASJ,GACb,SAAUK,GACV,IAAIC,EAAQ,y2BAERC,EACF,mIAAmIC,OAAOC,QAAO,cAE/I,WACE,OAAOH,EAASE,M,IAItB,SAASE,EAAgBC,GACvB,OAAOC,OACLD,EAAQF,QAAO,iBAAkB,WAC/B,OAAOF,C,IAET,I,CAGJ,IAAIM,EAAkB,CACpBC,QAASR,EACTS,YAAW,oBAEbV,EAAMW,UAAUd,KAAO,CACrBe,QAASZ,EAAMW,UAAUE,MAAMD,QAC/BE,OAAQd,EAAMW,UAAUE,MAAMC,OAC9BC,IAAK,CACHT,QAAO,yCACPU,YAAY,EACZC,QAAQ,EACRC,MAAO,eACPC,OAAQnB,EAAMW,UAAUI,KAE1BK,WAAY,CACVd,QAAO,SACPY,MAAO,eAET,aAAc,CACZ,CACEZ,QAASD,EACP,mGACGF,QAELa,YAAY,EACZG,OAAQX,GAEV,CAEEF,QAASD,EACP,uCAAuCF,QAEzCa,YAAY,EACZG,OAAQX,GAEV,CAEEF,QAASD,EAAgB,qCAAqCF,QAC9DgB,OAAQX,IAGZa,QAAS,CACPf,QAAO,uBACPU,YAAY,EACZE,MAAO,cAETT,QAASR,EACTqB,SAAQ,wBACRC,QAAO,sBACPC,OAAM,mCACNC,SAAQ,kEAERf,YAAW,gBAEd,CAzEC,CAyECZ,E,CA9EL4B,EAAOC,QAAU9B,EACjBA,EAAK+B,YAAc,OACnB/B,EAAKgC,QAAU,E","sources":["node_modules/refractor/lang/apex.js"],"sourcesContent":["'use strict'\nvar refractorSql = require('./sql.js')\nmodule.exports = apex\napex.displayName = 'apex'\napex.aliases = []\nfunction apex(Prism) {\n  Prism.register(refractorSql)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i\n    var className =\n      /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(\n        /<keyword>/g,\n        function () {\n          return keywords.source\n        }\n      )\n    /** @param {string} pattern */\n    function insertClassName(pattern) {\n      return RegExp(\n        pattern.replace(/<CLASS-NAME>/g, function () {\n          return className\n        }),\n        'i'\n      )\n    }\n    var classNameInside = {\n      keyword: keywords,\n      punctuation: /[()\\[\\]{};,:.<>]/\n    }\n    Prism.languages.apex = {\n      comment: Prism.languages.clike.comment,\n      string: Prism.languages.clike.string,\n      sql: {\n        pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-sql',\n        inside: Prism.languages.sql\n      },\n      annotation: {\n        pattern: /@\\w+\\b/,\n        alias: 'punctuation'\n      },\n      'class-name': [\n        {\n          pattern: insertClassName(\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/\n              .source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // cast\n          pattern: insertClassName(\n            /(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // variable/parameter declaration and return types\n          pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n          inside: classNameInside\n        }\n      ],\n      trigger: {\n        pattern: /(\\btrigger\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      keyword: keywords,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      boolean: /\\b(?:false|true)\\b/i,\n      number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n      operator:\n        /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n      punctuation: /[()\\[\\]{};,.]/\n    }\n  })(Prism)\n}\n"],"names":["refractorSql","require","apex","Prism1","register","Prism","keywords","className","source","replace","insertClassName","pattern","RegExp","classNameInside","keyword","punctuation","languages","comment","clike","string","sql","lookbehind","greedy","alias","inside","annotation","trigger","function","boolean","number","operator","module","exports","displayName","aliases"],"version":3,"file":"apex.3ee6da79.js.map"}