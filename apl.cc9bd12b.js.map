{"mappings":"2iCAAA,aAKA,SAASA,EAAIC,GACXA,EAAMC,UAAUF,IAAM,CACpBG,QAAO,kBACLC,OAAM,CACNC,QAAO,qBACPC,QAAQ,GAEVC,OAAM,4FAEIC,UAAD,yBACT,kBAAmB,CACjBH,QAAO,WACLI,MAAK,YAETC,SAAQ,UACAC,SAAA,kEACyF,mBAA7E,CAClBN,QAAO,gBACII,MAAJ,YAET,kBAAmB,CACjBJ,QAAO,cACOI,MAAP,YAETG,WAAY,CACVP,QAAO,IACLI,MAAK,WAETI,YAAW,cACPC,IAAC,CACHT,QAAO,cACPI,MAAO,W,CAlCbM,EAAOC,QAAUhB,EACjBA,EAAIiB,YAAc,MAClBjB,EAAIkB,QAAU,E","sources":["node_modules/refractor/lang/apl.js"],"sourcesContent":["'use strict'\n\nmodule.exports = apl\napl.displayName = 'apl'\napl.aliases = []\nfunction apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number:\n      /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  }\n}\n"],"names":["apl","Prism","languages","comment","string","pattern","greedy","number","statement","alias","constant","function","assignment","punctuation","dfn","module","exports","displayName","aliases"],"version":3,"file":"apl.cc9bd12b.js.map"}