{"mappings":"yiCAAA,aAKA,SAASA,EAAOC,IACZ,SAAUC,GACVA,EAAMC,UAAUH,OAASE,EAAMC,UAAUC,OAAO,QAAS,CACvDC,QAAS,CAEPC,QAAO,2bAEPC,YAAY,GAEdC,SAAU,CACR,CACEF,QAAO,iCACPG,QAAQ,GAEV,CACEH,QAAO,mCACPC,YAAY,EACZE,QAAQ,IAGZC,OAAM,kIAENC,SAAQ,gHAGHT,EAAMC,UAAUH,OAAO,cAC9B,IAAIY,EAAsB,CACxB,4BAA6B,CAC3BN,QAAO,aACPO,MAAO,eAETC,WAAY,CACVR,QAAO,UACPS,OAAQb,EAAMC,UAAUH,SAG5BE,EAAMC,UAAUa,aAAa,SAAU,SAAU,CAE/C,iBAAkB,CAChB,CACEV,QAAO,2CACPO,MAAO,YACPE,OAAQ,CACNE,cAAe,CACbX,QAAO,8BACPS,OAAQH,GAEVM,OAAM,YAGV,CACEZ,QAAO,iDACPO,MAAO,aACPE,OAAQ,CACNE,cAAe,CACbX,QAAO,qDACPC,YAAY,EACZQ,OAAQH,GAEVM,OAAM,aAIZC,KAAM,CAEJb,QAAO,6CACPG,QAAQ,YAGLP,EAAMC,UAAUH,OAAe,OACtCE,EAAMC,UAAUa,aAAa,SAAU,UAAW,CAChDI,WAAY,CACVd,QAAO,sCACPO,MAAO,aAGXX,EAAMC,UAAUa,aAAa,SAAU,WAAY,CACjDK,MAAO,CACLf,QAAO,gBACPO,MAAO,YAGXX,EAAMC,UAAUmB,GAAKpB,EAAMC,UAAUH,OACrCE,EAAMC,UAAUoB,IAAMrB,EAAMC,UAAUH,MACvC,CAnFC,CAmFCC,E,CAvFLuB,EAAOC,QAAUzB,EACjBA,EAAO0B,YAAc,SACrB1B,EAAO2B,QAAU,CAAC,KAAM,M","sources":["node_modules/refractor/lang/kotlin.js"],"sourcesContent":["'use strict'\n\nmodule.exports = kotlin\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\nfunction kotlin(Prism) {\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n"],"names":["kotlin","Prism1","Prism","languages","extend","keyword","pattern","lookbehind","function","greedy","number","operator","interpolationInside","alias","expression","inside","insertBefore","interpolation","string","char","annotation","label","kt","kts","module","exports","displayName","aliases"],"version":3,"file":"kotlin.50107f37.js.map"}