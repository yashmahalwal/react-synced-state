{"mappings":"yiCAAA,aACA,IAAIA,EAAeC,EAAQ,YACvBC,EAA4BD,EAAQ,0BAIxC,SAASE,EAAMC,GAGX,IAAUC,EAFZD,EAAME,SAASN,GACfI,EAAME,SAASJ,IACHG,EAsBTD,GArBKG,UAAUJ,MAAQ,CACtBK,UAAW,CACTC,QAAO,iBACPC,MAAO,eAET,eAAgB,CACdD,QAAO,UACPE,OAAQN,EAAME,UAAUK,MAG5BP,EAAMQ,MAAMC,IAAI,mBAAmB,SAAUC,GAE3CV,EAAME,UAAU,qBAAqBS,kBACnCD,EACA,QAHS,gB,IAObV,EAAMQ,MAAMC,IAAI,kBAAkB,SAAUC,GAC1CV,EAAME,UAAU,qBAAqBU,qBAAqBF,EAAK,Q,IA1BrEG,EAAOC,QAAUhB,EACjBA,EAAMiB,YAAc,QACpBjB,EAAMkB,QAAU,E","sources":["node_modules/refractor/lang/etlua.js"],"sourcesContent":["'use strict'\nvar refractorLua = require('./lua.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = etlua\netlua.displayName = 'etlua'\netlua.aliases = []\nfunction etlua(Prism) {\n  Prism.register(refractorLua)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.etlua = {\n      delimiter: {\n        pattern: /^<%[-=]?|-?%>$/,\n        alias: 'punctuation'\n      },\n      'language-lua': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.lua\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var pattern = /<%[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'etlua',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'etlua')\n    })\n  })(Prism)\n}\n"],"names":["refractorLua","require","refractorMarkupTemplating","etlua","Prism1","Prism","register","languages","delimiter","pattern","alias","inside","lua","hooks","add","env","buildPlaceholders","tokenizePlaceholders","module","exports","displayName","aliases"],"version":3,"file":"etlua.d05e8b01.js.map"}