{"mappings":"2iCAAA,aAKA,SAASA,EAAWC,GAClBA,EAAMC,UAAUF,WAAa,CAC3BG,QAASC,OACP,CAEE,mBAAmBC,OACnB,cAAcA,OACd,4DAA4DA,OAC5D,mBAAmBA,QACnBC,KAAK,MAETC,OAAQ,CACNC,QAAO,kDACPC,QAAQ,GAEVC,SAAQ,OACR,sBAAuB,CACrBF,QAAO,2CACPG,YAAY,EACZC,MAAO,YAET,aAAc,CACZJ,QAAO,iIAEPG,YAAY,EACZE,OAAQ,CACNC,YAAW,MAGfC,QAAO,gYAEP,mBAAoB,CAClBP,QAAO,sBACPI,MAAO,YAETI,SAAQ,sBACRC,QAAO,sBACPC,OAAM,oBACNC,SAAQ,8BACRL,YAAW,eAEbb,EAAMC,UAAUkB,MAAQnB,EAAMC,UAAUF,U,CA5C1CqB,EAAOC,QAAUtB,EACjBA,EAAWuB,YAAc,aACzBvB,EAAWwB,QAAU,CAAC,Q","sources":["node_modules/refractor/lang/peoplecode.js"],"sourcesContent":["'use strict'\n\nmodule.exports = peoplecode\npeoplecode.displayName = 'peoplecode'\npeoplecode.aliases = ['pcode']\nfunction peoplecode(Prism) {\n  Prism.languages.peoplecode = {\n    comment: RegExp(\n      [\n        // C-style multiline comments\n        /\\/\\*[\\s\\S]*?\\*\\//.source, // REM comments\n        /\\bREM[^;]*;/.source, // Nested <* *> comments\n        /<\\*(?:[^<*]|\\*(?!>)|<(?!\\*)|<\\*(?:(?!\\*>)[\\s\\S])*\\*>)*\\*>/.source, // /+ +/ comments\n        /\\/\\+[\\s\\S]*?\\+\\//.source\n      ].join('|')\n    ),\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    variable: /%\\w+/,\n    'function-definition': {\n      pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'class-name': {\n      pattern:\n        /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /:/\n      }\n    },\n    keyword:\n      /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n    'operator-keyword': {\n      pattern: /\\b(?:and|not|or)\\b/i,\n      alias: 'operator'\n    },\n    function: /[_a-z]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n    punctuation: /[:.;,()[\\]]/\n  }\n  Prism.languages.pcode = Prism.languages.peoplecode\n}\n"],"names":["peoplecode","Prism","languages","comment","RegExp","source","join","string","pattern","greedy","variable","lookbehind","alias","inside","punctuation","keyword","function","boolean","number","operator","pcode","module","exports","displayName","aliases"],"version":3,"file":"peoplecode.4589f8ca.js.map"}