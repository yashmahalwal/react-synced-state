{"mappings":"2iCAAA,aAKA,SAASA,EAAOC,GACdA,EAAMC,UAAUF,OAAS,CACvBG,QAAO,gCACPC,OAAQ,CACNC,QAAO,wBACPC,QAAQ,GAEV,kBAAmB,CACjBD,QAAO,2BACPC,QAAQ,EACRC,MAAO,QACPC,OAAQ,CACNC,MAAO,CACLJ,QAAO,yCACPK,YAAY,EACZH,MAAO,eAETI,OAAM,sEAENC,YAAW,WAGfC,OAAQ,CACNR,QAAO,0DACPC,QAAQ,EACRE,OAAQ,CACNM,QAAS,CAEPT,QAAO,oBACPK,YAAY,GAEdE,YAAW,SAGfG,QAAS,CACPV,QAAO,0EAEPK,YAAY,EACZF,OAAQ,CACNQ,SAAQ,yBACRJ,YAAW,UAGfK,WAAY,CACVZ,QAAO,iBACPE,MAAO,WAETW,MAAO,CACLb,QAAO,aACPE,MAAO,eAETY,QAAO,gHAEPC,WAAY,CACV,CACEf,QAAO,qBACPE,MAAO,CAAC,OAAQ,eAElB,CACEF,QAAO,qBACPE,MAAO,CAAC,QAAS,cAGrBc,SAAQ,mBACRC,SAAQ,wBACRV,YAAW,WAEbX,EAAMC,UAAUqB,GAAKtB,EAAMC,UAAUF,M,CAtEvCwB,EAAOC,QAAUzB,EACjBA,EAAO0B,YAAc,SACrB1B,EAAO2B,QAAU,CAAC,K","sources":["node_modules/refractor/lang/antlr4.js"],"sourcesContent":["'use strict'\n\nmodule.exports = antlr4\nantlr4.displayName = 'antlr4'\nantlr4.aliases = ['g4']\nfunction antlr4(Prism) {\n  Prism.languages.antlr4 = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    string: {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n      greedy: true\n    },\n    'character-class': {\n      pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n      greedy: true,\n      alias: 'regex',\n      inside: {\n        range: {\n          pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n          lookbehind: true,\n          alias: 'punctuation'\n        },\n        escape:\n          /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n        punctuation: /[\\[\\]]/\n      }\n    },\n    action: {\n      pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n      greedy: true,\n      inside: {\n        content: {\n          // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\n          pattern: /(\\{)[\\s\\S]+(?=\\})/,\n          lookbehind: true\n        },\n        punctuation: /[{}]/\n      }\n    },\n    command: {\n      pattern:\n        /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n      lookbehind: true,\n      inside: {\n        function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n        punctuation: /[,()]/\n      }\n    },\n    annotation: {\n      pattern: /@\\w+(?:::\\w+)*/,\n      alias: 'keyword'\n    },\n    label: {\n      pattern: /#[ \\t]*\\w+/,\n      alias: 'punctuation'\n    },\n    keyword:\n      /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n    definition: [\n      {\n        pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n        alias: ['rule', 'class-name']\n      },\n      {\n        pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n        alias: ['token', 'constant']\n      }\n    ],\n    constant: /\\b[A-Z][A-Z_]*\\b/,\n    operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n    punctuation: /[;:()=]/\n  }\n  Prism.languages.g4 = Prism.languages.antlr4\n}\n"],"names":["antlr4","Prism","languages","comment","string","pattern","greedy","alias","inside","range","lookbehind","escape","punctuation","action","content","command","function","annotation","label","keyword","definition","constant","operator","g4","module","exports","displayName","aliases"],"version":3,"file":"antlr4.f6c95eb5.js.map"}