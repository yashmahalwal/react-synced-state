{"mappings":"yiCAAA,aAKA,SAASA,EAAKC,GACV,IAAUC,EACNC,EAIAC,EAEAC,EAPMH,EA6ETD,EA5EGE,EAAW,C,yYAIXC,EAAgB,uDACjBE,OACCD,EAAY,CACdE,QAASC,OAAOJ,EAAgB,gCAAgCE,QAChEG,YAAY,EACZC,OAAQ,CACNC,UAAW,CACTJ,QAAO,2CACPG,OAAQ,CACNE,YAAW,SAKnBV,EAAMW,UAAUb,KAAOE,EAAMW,UAAUC,OAAO,QAAS,CACrD,aAAc,CACZT,EACA,CAGEE,QAASC,OACPJ,EAAgB,+BAA+BE,QAEjDG,YAAY,EACZC,OAAQL,EAAUK,SAGtBK,QAASZ,EACTa,SAAQ,mFAGVd,EAAMW,UAAUI,aAAa,OAAQ,SAAU,CAC7C,iBAAkB,CAChBV,QAAO,mEAEPW,QAAQ,EACRR,OAAQ,CACNS,cAAe,CACbZ,QAAO,6DAEPE,YAAY,EACZC,OAAQ,CACNE,YAAW,aACXQ,WAAY,CACVb,QAAO,UACPG,OAAQR,EAAMW,UAAUb,QAI9BqB,OAAM,YAGVA,YAAQC,IAEVpB,EAAMW,UAAUI,aAAa,OAAQ,aAAc,CACjDM,SAAU,CACRhB,QAAO,OACPiB,MAAO,cAGXtB,EAAMW,UAAUI,aAAa,OAAQ,aAAc,CACjDQ,SAAU,CACRlB,QAAO,sEAEPG,OAAQ,CACN,aAAcL,EACdU,QAASZ,EACTS,YAAW,YACXI,SAAQ,W,CA7ElBU,EAAOC,QAAU3B,EACjBA,EAAK4B,YAAc,OACnB5B,EAAK6B,QAAU,E","sources":["node_modules/refractor/lang/dart.js"],"sourcesContent":["'use strict'\n\nmodule.exports = dart\ndart.displayName = 'dart'\ndart.aliases = []\nfunction dart(Prism) {\n  ;(function (Prism) {\n    var keywords = [\n      /\\b(?:async|sync|yield)\\*/,\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n    ] // Handles named imports, such as http.Client\n    var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the dart naming conventions\n    var className = {\n      pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        }\n      }\n    }\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      operator:\n        /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    })\n    Prism.languages.insertBefore('dart', 'string', {\n      'string-literal': {\n        pattern:\n          /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2(?!\\2))/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\$\\{?|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.dart\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      },\n      string: undefined\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      }\n    })\n  })(Prism)\n}\n"],"names":["dart","Prism1","Prism","keywords","packagePrefix","className","source","pattern","RegExp","lookbehind","inside","namespace","punctuation","languages","extend","keyword","operator","insertBefore","greedy","interpolation","expression","string","undefined","metadata","alias","generics","module","exports","displayName","aliases"],"version":3,"file":"dart.11c0e920.js.map"}