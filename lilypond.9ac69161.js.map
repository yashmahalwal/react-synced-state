{"mappings":"yiCAAA,aACA,IAAIA,EAAkBC,EAAQ,eAI9B,SAASC,EAASC,GAChBA,EAAMC,SAASJ,GACb,SAAUK,GAMV,IALA,IAAIC,EACF,mGACGC,OAGIC,EAAI,EAAGA,EADQ,EACeA,IACrCF,EAAmBA,EAAiBG,QAAO,WAAY,WACrD,OAAOH,C,IAGXA,EAAmBA,EAAiBG,QAAO,UAAY,UAAUF,QACjE,IAAIG,EAAYL,EAAMM,UAAUT,SAAW,CACzCU,QAAO,8BACP,kBAAmB,CACjBC,QAASC,OACP,8DAA8DP,OAAOE,QAAO,WAE1E,WACE,OAAOH,C,IAGX,KAEFS,YAAY,EACZC,QAAQ,EACRC,OAAQ,CACNC,OAAQ,CACNL,QAAO,eACPE,YAAY,EACZI,MAAO,kBACPF,OAAQ,CACN,oBAAqB,CACnBJ,QAAO,iBACPG,QAAQ,EACRC,OAAQ,CACNG,YAAW,YACXlB,SAAU,CACRW,QAAO,UACPM,MAAO,oBACPF,OAAQ,QAIdI,KAAMhB,EAAMM,UAAUO,SAG1BE,YAAW,MAGfE,OAAQ,CACNT,QAAO,oBACPG,QAAQ,GAEV,aAAc,CACZH,QAAO,mBACPE,YAAY,GAEdQ,QAAS,CACPV,QAAO,iBACPI,OAAQ,CACNG,YAAW,QAGfI,SAAQ,aACRJ,YAAa,CACXP,QAAO,uGAEPE,YAAY,GAEdU,OAAM,qBAERf,EAAS,mBAAmBO,OAAe,OAAEA,OAC3C,qBACAA,OAAiB,SAAEA,OAASP,EAC9BL,EAAMM,UAAUe,GAAKhB,CACtB,CA5EC,CA4ECP,E,CAjFLwB,EAAOC,QAAU1B,EACjBA,EAAS2B,YAAc,WACvB3B,EAAS4B,QAAU,E","sources":["node_modules/refractor/lang/lilypond.js"],"sourcesContent":["'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = lilypond\nlilypond.displayName = 'lilypond'\nlilypond.aliases = []\nfunction lilypond(Prism) {\n  Prism.register(refractorScheme)\n  ;(function (Prism) {\n    var schemeExpression =\n      /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/\n        .source // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n    // For some reason, this can't be 4\n    var recursivenessLog2 = 5\n    for (var i = 0; i < recursivenessLog2; i++) {\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n        return schemeExpression\n      })\n    }\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var lilypond = (Prism.languages.lilypond = {\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n      'embedded-scheme': {\n        pattern: RegExp(\n          /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\n            /<expr>/g,\n            function () {\n              return schemeExpression\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          scheme: {\n            pattern: /^(#)[\\s\\S]+$/,\n            lookbehind: true,\n            alias: 'language-scheme',\n            inside: {\n              'embedded-lilypond': {\n                pattern: /#\\{[\\s\\S]*?#\\}/,\n                greedy: true,\n                inside: {\n                  punctuation: /^#\\{|#\\}$/,\n                  lilypond: {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-lilypond',\n                    inside: null // see below\n                  }\n                }\n              },\n              rest: Prism.languages.scheme\n            }\n          },\n          punctuation: /#/\n        }\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\\\new\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /\\\\[a-z][-\\w]*/i,\n        inside: {\n          punctuation: /^\\\\/\n        }\n      },\n      operator: /[=|]|<<|>>/,\n      punctuation: {\n        pattern:\n          /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\n    })\n    lilypond['embedded-scheme'].inside['scheme'].inside[\n      'embedded-lilypond'\n    ].inside['lilypond'].inside = lilypond\n    Prism.languages.ly = lilypond\n  })(Prism)\n}\n"],"names":["refractorScheme","require","lilypond","Prism1","register","Prism","schemeExpression","source","i","replace","lilypond1","languages","comment","pattern","RegExp","lookbehind","greedy","inside","scheme","alias","punctuation","rest","string","keyword","operator","number","ly","module","exports","displayName","aliases"],"version":3,"file":"lilypond.9ac69161.js.map"}