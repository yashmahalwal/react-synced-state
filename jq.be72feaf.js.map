{"mappings":"2iCAAA,aAKA,SAASA,EAAGC,GACR,IAAUC,EACNC,EACAC,EAQAC,EAcAC,EAxBMJ,EAqETD,EApEGE,EAAgB,8BAA8BI,OAC9CH,EAASI,OACX,2CAA2CD,OAAOE,QAAO,OAEvD,WACE,OAAON,C,KAITE,EAAsB,CACxBF,cAAe,CACbO,QAASF,OAAO,0BAA0BD,OAASJ,GACnDQ,YAAY,EACZC,OAAQ,CACNC,QAAS,CACPH,QAAO,wBACPC,YAAY,EACZC,OAAQ,MAEVE,YAAW,eAIbR,EAAMJ,EAAMa,UAAUf,GAAK,CAC7BgB,QAAO,MACPC,SAAU,CACRP,QAASF,OAAOJ,EAAOG,OAAS,gBAAgBA,QAChDI,YAAY,EACZO,QAAQ,EACRN,OAAQP,GAEVD,OAAQ,CACNM,QAASN,EACTO,YAAY,EACZO,QAAQ,EACRN,OAAQP,GAEVc,SAAU,CACRT,QAAO,uBACPC,YAAY,GAEdS,SAAQ,UACR,mBAAoB,CAClBV,QAAO,4BACPW,MAAO,YAETC,QAAO,wHAEPC,QAAO,qBACPC,OAAM,4CACNC,SAAU,CACR,CACEf,QAAO,OACPW,MAAO,Q,kEAIX,mBAAoB,CAClBX,QAAO,wBACPW,MAAO,YAETP,YAAW,oCACXY,IAAK,CACHhB,QAAO,KACPW,MAAO,cAGXhB,EAAoBF,cAAcS,OAAOC,QAAQD,OAASN,C,CAxE9DqB,EAAOC,QAAU5B,EACjBA,EAAG6B,YAAc,KACjB7B,EAAG8B,QAAU,E","sources":["node_modules/refractor/lang/jq.js"],"sourcesContent":["'use strict'\n\nmodule.exports = jq\njq.displayName = 'jq'\njq.aliases = []\nfunction jq(Prism) {\n  ;(function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(\n        /__/g,\n        function () {\n          return interpolation\n        }\n      )\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword:\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n"],"names":["jq","Prism1","Prism","interpolation","string","stringInterpolation","jq1","source","RegExp","replace","pattern","lookbehind","inside","content","punctuation","languages","comment","property","greedy","function","variable","alias","keyword","boolean","number","operator","dot","module","exports","displayName","aliases"],"version":3,"file":"jq.be72feaf.js.map"}