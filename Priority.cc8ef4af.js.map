{"mappings":"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","sources":["docs-source/Pages/MainConcepts/Priority.tsx","docs-source/CodeSamples/PriorityQueueDemo/index.tsx","docs-source/CodeSamples/PriorityQueueDemo/PriorityQueueDemo.tsx"],"sourcesContent":["import Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport CodePreview from \"../../components/code/CodePreview\";\nimport PriorityQueueDemo, { SourceCode } from \"../../CodeSamples/PriorityQueueDemo\";\nimport CodeSnippet from \"../../components/code/CodeSnippet\";\nimport PageWithContent from \"../../components/layouts/PageWithContent\";\nimport { Pages } from \"../../navigationData/pages\";\n\nconst hookCode = `\n  const [state, setState] = useSyncedState(initialValue, { priority: <number> });\n`.trim();\n\nexport default function Queueing() {\n  const theme = useTheme();\n\n  return (\n    <PageWithContent\n      title={\"Priorities\"}\n      content={\n        <>\n          <Typography variant={\"body1\"}>\n            We have seen how state updates can be queued. But we still have no control over ordering. The updates are\n            processed in FIFO manner. It is possible to control the ordering by using priorities.\n          </Typography>\n\n          <section style={{ marginTop: theme.spacing(4) }}>\n            <Typography gutterBottom variant={\"h5\"} fontWeight={\"bold\"} component={\"h2\"}>\n              Ordering updates using priorities\n            </Typography>\n            <article>\n              <Typography variant={\"body1\"} gutterBottom>\n                The state update queue is ordered by priority value of the update. For updates with same priority, it\n                behaves like a FIFO queue. Highest priority updates are processed first. To assign priority to an\n                update, set the priority option in the hook.\n              </Typography>\n              <CodeSnippet\n                customStyle={{\n                  borderWidth: 1,\n                  borderStyle: \"solid\",\n                  borderColor: theme.palette.grey[400],\n                  borderRadius: theme.spacing(1),\n                  marginTop: theme.spacing(1),\n                  marginBottom: theme.spacing(2),\n                }}\n              >\n                {hookCode}\n              </CodeSnippet>\n              <Typography variant={\"body1\"} gutterBottom>\n                And that&apos;s it. The default priority of a update is exported as <code>defaultPriority</code> in the\n                package. You can use that and build priority values around it. This value is <code>0</code> but that is\n                an implementation detail and should not be relied on. To create an update with highest priority, you can\n                set this value to <code>Infinity</code>. To create an update with lowest priority, you can set this\n                value to <code>-Infinity</code>. To create other levels, add or subtract numbers from{\" \"}\n                <code>defaultPriority</code>.\n              </Typography>\n              <CodePreview sourceCode={SourceCode}>\n                <PriorityQueueDemo />\n              </CodePreview>\n            </article>\n          </section>\n        </>\n      }\n      previousLink={Pages.MainConcepts.Queueing}\n      nextLink={Pages.MainConcepts.Layers}\n    />\n  );\n}\n","export { default, __sourceCode as SourceCode } from \"./PriorityQueueDemo\";\n\ndeclare module \"./PriorityQueueDemo\" {\n  export const __sourceCode: string;\n}\n","import React, { useCallback, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { defaultPriority, useSyncedState } from \"../../../src\";\nimport { Typography } from \"@mui/material\";\n\nexport default function PreviewQueueDemo() {\n  const [syncedState1, setSyncedState1] = useSyncedState(false);\n  const [syncedState2, setSyncedState2] = useSyncedState(false, { priority: defaultPriority + 1 });\n  const [syncedState3, setSyncedState3] = useSyncedState(false, { priority: defaultPriority + 2 });\n  const [state1, setState1] = useState(false);\n  const [state2, setState2] = useState(false);\n  const [state3, setState3] = useState(false);\n\n  const [queue, setQueue] = useState<number[]>([]);\n\n  const manageQueue = useCallback((entry: number, enter: boolean) => {\n    if (enter) {\n      setQueue((q) => (q.includes(entry) ? q : [...q, entry].sort((a, b) => b - a)));\n    } else {\n      setQueue((q) => q.filter((e) => e !== entry));\n    }\n  }, []);\n\n  return (\n    <Box\n      display={\"flex\"}\n      alignItems={\"center\"}\n      flex={1}\n      justifyContent={\"space-around\"}\n      sx={{\n        flexDirection: {\n          xs: \"column\",\n          md: \"row\",\n        },\n      }}\n    >\n      <Box>\n        <Typography variant={\"h3\"} component={\"p\"}>\n          Queue: [{queue.join(\", \")}]\n        </Typography>\n      </Box>\n      <Box>\n        <FormGroup>\n          <FormControlLabel\n            label={`State 1`}\n            control={\n              <>\n                <Checkbox\n                  checked={state1}\n                  onChange={(e) => {\n                    setSyncedState1(e.target.checked);\n                    setState1(e.target.checked);\n                    manageQueue(1, e.target.checked);\n                  }}\n                />\n              </>\n            }\n          />\n          <FormControlLabel\n            label={`State 2`}\n            control={\n              <Checkbox\n                checked={state2}\n                onChange={(e) => {\n                  setSyncedState2(e.target.checked);\n                  setState2(e.target.checked);\n                  manageQueue(2, e.target.checked);\n                }}\n              />\n            }\n          />\n          <FormControlLabel\n            label={`State 3`}\n            control={\n              <Checkbox\n                checked={state3}\n                onChange={(e) => {\n                  setSyncedState3(e.target.checked);\n                  setState3(e.target.checked);\n                  manageQueue(3, e.target.checked);\n                }}\n              />\n            }\n          />\n        </FormGroup>\n      </Box>\n      <Box>\n        <FormGroup>\n          <FormControlLabel label={`Synced State 1`} control={<Checkbox disabled checked={syncedState1} />} />\n          <FormControlLabel label={`Synced State 2`} control={<Checkbox disabled checked={syncedState2} />} />\n          <FormControlLabel label={`Synced State 3`} control={<Checkbox disabled checked={syncedState3} />} />\n        </FormGroup>\n      </Box>\n    </Box>\n  );\n}\n"],"names":["parcelHelpers","require","_typography","_react","_styles","_codePreview","_priorityQueueDemo","_codeSnippet","_pageWithContent","_pages","hookCode","trim","theme","useTheme","_reactDefault","default","createElement","_pageWithContentDefault","title","content","Fragment","_typographyDefault","variant","style","marginTop","spacing","gutterBottom","fontWeight","component","_codeSnippetDefault","customStyle","borderWidth","borderStyle","borderColor","palette","grey","borderRadius","marginBottom","_codePreviewDefault","sourceCode","SourceCode","_priorityQueueDemoDefault","previousLink","Pages","MainConcepts","Queueing","nextLink","Layers","export","exports","__sourceCode","_box","_checkbox","_formGroup","_formControlLabel","_src","_material","syncedState1","setSyncedState1","useSyncedState","syncedState2","setSyncedState2","priority","defaultPriority","syncedState3","setSyncedState3","state1","setState1","useState","state2","setState2","state3","setState3","queue","setQueue","manageQueue","useCallback","entry","enter","q","includes","sort","a","b","filter","e","_boxDefault","display","alignItems","flex","justifyContent","sx","flexDirection","xs","md","Typography","join","_formGroupDefault","_formControlLabelDefault","label","control","_checkboxDefault","checked","onChange","target","disabled"],"version":3,"file":"Priority.cc8ef4af.js.map"}