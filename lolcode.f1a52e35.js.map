{"mappings":"2iCAAA,aAKA,SAASA,EAAQC,GACfA,EAAMC,UAAUF,QAAU,CACxBG,QAAS,C,sCACTC,OAAQ,CACNC,QAAO,kBACPC,OAAQ,CACNC,SAAQ,aACRC,OAAQ,C,4CAEVC,QAAQ,GAEVC,OAAM,sCACNF,OAAQ,CACNH,QAAO,iEACPM,YAAY,EACZL,OAAQ,CACNM,QAAO,YAGXC,MAAO,CACLR,QAAO,iDACPM,YAAY,EACZG,MAAO,UAETC,SAAU,CACRV,QAAO,6CACPM,YAAY,GAEdC,QAAS,CACP,CACEP,QAAO,sRAEPM,YAAY,G,gBAIhBK,QAAS,CACPX,QAAO,+BACPM,YAAY,GAEdJ,SAAU,CACRF,QAAO,qBACPM,YAAY,GAEdM,SAAU,CACRZ,QAAO,uHAEPM,YAAY,GAEdO,YAAW,c,CApDfC,EAAOC,QAAUpB,EACjBA,EAAQqB,YAAc,UACtBrB,EAAQsB,QAAU,E","sources":["node_modules/refractor/lang/lolcode.js"],"sourcesContent":["'use strict'\n\nmodule.exports = lolcode\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\nfunction lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\":])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern:\n          /(^|\\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\\?|YA RLY|YR)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:FAIL|WIN)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern:\n        /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|â€¦|,|!/\n  }\n}\n"],"names":["lolcode","Prism","languages","comment","string","pattern","inside","variable","symbol","greedy","number","lookbehind","keyword","label","alias","function","boolean","operator","punctuation","module","exports","displayName","aliases"],"version":3,"file":"lolcode.f1a52e35.js.map"}