{"mappings":"yiCAAA,aACA,IAAIA,EAAgBC,EAAQ,aACxBC,EAAuBD,EAAQ,oBAInC,SAASE,EAAQC,GAGb,IAAUC,EACNC,EACAC,EACAC,EALNJ,EAAMK,SAAST,GACfI,EAAMK,SAASP,GACHG,EA2FTD,EA1FGE,EAAe,oCACfC,EAAkB,4BAA4BG,OAC9CF,EACF,0DAA0DE,OAAOC,QAAO,UAEtE,WACE,OAAOJ,C,IAGbF,EAAMO,UAAUT,QAAUE,EAAMO,UAAUC,OAAO,cAAe,IAChER,EAAMO,UAAUE,aAAa,UAAW,UAAW,CACjDN,UAAW,CACTO,QAASC,OACP,gEACGN,OACD,MACAF,EACA,KAEJS,YAAY,EACZC,OAAQ,CACNC,SAAU,CACRJ,QAAO,qBACPE,YAAY,GAEdG,MAAO,CACLL,QAAO,YACPE,YAAY,GAEdI,UAAW,CACTN,QAAO,0BACPG,OAAQ,CACNI,YAAW,OAGf,aAAY,aACZC,QAASlB,EAAMO,UAAUY,KAAKD,QAC9BD,YAAW,eAGf,aAAc,CAEZP,QAAO,wBACPE,YAAY,EACZC,OAAQ,CACNI,YAAW,UAGf,eAAgB,CACd,CACEP,QAAO,+GAEPE,YAAY,EACZC,OAAQ,CACNO,KAAM,CAEJV,QAAST,EACTW,YAAY,EACZC,OAAQb,EAAMO,UAAUY,KACxBE,MAAO,mBAIb,CACEX,QAAO,8DAEPE,YAAY,EACZC,OAAQ,CACNS,KAAM,CACJZ,QAAST,EACTW,YAAY,EACZC,OAAQ,CAENU,IAAKvB,EAAMO,UAAUiB,OAAOD,IAC5BE,OAAQzB,EAAMO,UAAUiB,OAAOC,OAC/BL,KAAM,CAEJV,QAAO,KACPG,OAAQb,EAAMO,UAAUY,KACxBE,MAAO,sBAOnBE,IAAKvB,EAAMO,UAAUiB,OAAOD,IAC5BE,OAAQzB,EAAMO,UAAUiB,OAAOC,SAEjCzB,EAAMO,UAAUmB,YAAYC,WAAW,OAAQ3B,EAAMO,UAAUT,Q,CAhGnE8B,EAAOC,QAAU/B,EACjBA,EAAQgC,YAAc,UACtBhC,EAAQiC,QAAU,E","sources":["node_modules/refractor/lang/javadoc.js"],"sourcesContent":["'use strict'\nvar refractorJava = require('./java.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = javadoc\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\nfunction javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n"],"names":["refractorJava","require","refractorJavadoclike","javadoc","Prism1","Prism","codeLinePattern","memberReference","reference","register","source","replace","languages","extend","insertBefore","pattern","RegExp","lookbehind","inside","function","field","namespace","punctuation","keyword","java","code","alias","line","tag","markup","entity","javadoclike","addSupport","module","exports","displayName","aliases"],"version":3,"file":"javadoc.654957d6.js.map"}