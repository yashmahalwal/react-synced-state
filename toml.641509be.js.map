{"mappings":"2iCAAA,aAKA,SAASA,EAAKC,IACV,SAAUC,GACV,IAAIC,EAAM,+CAA+CC,OAIzD,SAASC,EAAUC,GACjB,OAAOA,EAAQC,QAAO,OAAQ,WAC5B,OAAOJ,C,IAGXD,EAAMM,UAAUR,KAAO,CACrBS,QAAS,CACPH,QAAO,MACPI,QAAQ,GAEVC,MAAO,CACLL,QAASM,OACPP,EACE,qDAAqDD,QAEvD,KAEFS,YAAY,EACZH,QAAQ,EACRI,MAAO,cAETX,IAAK,CACHG,QAASM,OACPP,EAAU,6CAA6CD,QACvD,KAEFS,YAAY,EACZH,QAAQ,EACRI,MAAO,YAETC,OAAQ,CACNT,QAAO,8EAEPI,QAAQ,GAEVM,KAAM,CACJ,CAEEV,QAAO,oFAEPQ,MAAO,UAET,CAEER,QAAO,kCACPQ,MAAO,WAGXG,OAAM,2KAENC,QAAO,qBACPC,YAAW,aAEd,CA1DC,CA0DClB,E,CA9DLmB,EAAOC,QAAUrB,EACjBA,EAAKsB,YAAc,OACnBtB,EAAKuB,QAAU,E","sources":["node_modules/refractor/lang/toml.js"],"sourcesContent":["'use strict'\n\nmodule.exports = toml\ntoml.displayName = 'toml'\ntoml.aliases = []\nfunction toml(Prism) {\n  ;(function (Prism) {\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source\n    /**\n     * @param {string} pattern\n     */\n    function insertKey(pattern) {\n      return pattern.replace(/__/g, function () {\n        return key\n      })\n    }\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(\n          insertKey(\n            /(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(\n          insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern:\n          /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [\n        {\n          // Offset Date-Time, Local Date-Time, Local Date\n          pattern:\n            /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n          alias: 'number'\n        },\n        {\n          // Local Time\n          pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n          alias: 'number'\n        }\n      ],\n      number:\n        /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    }\n  })(Prism)\n}\n"],"names":["toml","Prism1","Prism","key","source","insertKey","pattern","replace","languages","comment","greedy","table","RegExp","lookbehind","alias","string","date","number","boolean","punctuation","module","exports","displayName","aliases"],"version":3,"file":"toml.641509be.js.map"}