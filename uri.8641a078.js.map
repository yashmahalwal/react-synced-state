{"mappings":"yiCAAA,aAKA,SAASA,EAAIC,GAEXA,EAAMC,UAAUF,IAAM,CACpBG,OAAQ,CACNC,QAAO,wBACPC,QAAQ,EACRC,OAAQ,CACN,mBAAkB,OAGtBC,SAAU,CACRH,QAAO,6BACPE,OAAQ,CACN,qBAAoB,OAGxBE,MAAO,CACLJ,QAAO,8BACPE,OAAQ,CACN,kBAAmB,CACjBF,QAAO,MACPC,QAAQ,GAEV,iBAAgB,OAChBI,KAAM,CACJL,QAAO,eACPE,OAAQ,CACNI,IAAG,SACHC,MAAO,CACLP,QAAO,cACPQ,YAAY,OAMtBC,UAAW,CACTT,QAASU,OACP,QAAQC,OACN,+BAA+BA,OAC9B,MACC,kEACGA,OACH,IACA,wBAAwBA,OACxB,IACF,YAAYA,OACd,KAEFT,OAAQ,CACN,sBAAqB,QACrB,oBAAqB,CACnBF,QAAO,2BACPE,OAAQ,CACN,sBAAqB,KACrB,YAAW,4BAGf,eAAgB,CACdF,QAAO,QACPE,OAAQ,CACN,iBAAgB,KAChBU,KAAI,SAGRC,KAAM,CACJb,QAAO,UACPE,OAAQ,CACN,aAAc,CACZF,QAAO,gBACPE,OAAQ,CACN,uBAAsB,UACtB,aAAY,YACZ,eAAc,aAGlB,eAAc,oEAMtBY,KAAM,CACJd,QAAO,6BACPE,OAAQ,CACN,iBAAgB,QAItBL,EAAMC,UAAUiB,IAAMlB,EAAMC,UAAUF,G,CA5FxCoB,EAAOC,QAAUrB,EACjBA,EAAIsB,YAAc,MAClBtB,EAAIuB,QAAU,CAAC,M","sources":["node_modules/refractor/lang/uri.js"],"sourcesContent":["'use strict'\n\nmodule.exports = uri\nuri.displayName = 'uri'\nuri.aliases = ['url']\nfunction uri(Prism) {\n  // https://tools.ietf.org/html/rfc3986#appendix-A\n  Prism.languages.uri = {\n    scheme: {\n      pattern: /^[a-z][a-z0-9+.-]*:/im,\n      greedy: true,\n      inside: {\n        'scheme-delimiter': /:$/\n      }\n    },\n    fragment: {\n      pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'fragment-delimiter': /^#/\n      }\n    },\n    query: {\n      pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'query-delimiter': {\n          pattern: /^\\?/,\n          greedy: true\n        },\n        'pair-delimiter': /[&;]/,\n        pair: {\n          pattern: /^[^=][\\s\\S]*/,\n          inside: {\n            key: /^[^=]+/,\n            value: {\n              pattern: /(^=)[\\s\\S]+/,\n              lookbehind: true\n            }\n          }\n        }\n      }\n    },\n    authority: {\n      pattern: RegExp(\n        /^\\/\\//.source + // [ userinfo \"@\" ]\n          /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source + // host\n          ('(?:' + // IP-literal\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/\n              .source +\n            '|' + // IPv4address or registered name\n            /[\\w\\-.~!$&'()*+,;=%]*/.source +\n            ')') + // [ \":\" port ]\n          /(?::\\d*)?/.source,\n        'm'\n      ),\n      inside: {\n        'authority-delimiter': /^\\/\\//,\n        'user-info-segment': {\n          pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\n          inside: {\n            'user-info-delimiter': /@$/,\n            'user-info': /^[\\w\\-.~!$&'()*+,;=%:]+/\n          }\n        },\n        'port-segment': {\n          pattern: /:\\d*$/,\n          inside: {\n            'port-delimiter': /^:/,\n            port: /^\\d+/\n          }\n        },\n        host: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            'ip-literal': {\n              pattern: /^\\[[\\s\\S]+\\]$/,\n              inside: {\n                'ip-literal-delimiter': /^\\[|\\]$/,\n                'ipv-future': /^v[\\s\\S]+/,\n                'ipv6-address': /^[\\s\\S]+/\n              }\n            },\n            'ipv4-address':\n              /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]\\d{0,2})$/\n          }\n        }\n      }\n    },\n    path: {\n      pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\n      inside: {\n        'path-separator': /\\//\n      }\n    }\n  }\n  Prism.languages.url = Prism.languages.uri\n}\n"],"names":["uri","Prism","languages","scheme","pattern","greedy","inside","fragment","query","pair","key","value","lookbehind","authority","RegExp","source","port","host","path","url","module","exports","displayName","aliases"],"version":3,"file":"uri.8641a078.js.map"}