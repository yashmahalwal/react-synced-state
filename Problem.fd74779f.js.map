{"mappings":"yiCAAA,IAAAA,EAAAC,EAAA,kD,uBAAA,IAAAC,EAAAD,EAAA,4B,sBACAE,EAAAF,EAAA,S,sBACAG,EAAAH,EAAA,wBACAI,EAAAJ,EAAA,qC,sBACAK,EAAAL,EAAA,kC,sBACAM,EAAAN,EAAA,yC,sBACAO,EAAAP,EAAA,2B,UAEe,WACb,MAAMQ,GAAQ,EAAAL,EAAAM,YAEd,OACEC,EAAAC,QAAAC,cAACC,EAAAF,QAAe,CACdG,MAAO,cACPC,QACEL,EAAAC,QAAAC,cAAAF,EAAAC,QAAAK,SAAA,KACEN,EAAAC,QAAAC,cAACK,EAAAN,QAAU,CAACO,QAAS,SAAS,kXAO9BR,EAAAC,QAAAC,cAAC,UAAO,CAACO,MAAO,CAAEC,UAAWZ,EAAMa,QAAQ,KACzCX,EAAAC,QAAAC,cAACK,EAAAN,QAAU,CAACW,cAAA,EAAaJ,QAAS,KAAMK,WAAY,OAAQC,UAAW,MAAM,uBAG7Ed,EAAAC,QAAAC,cAAC,UAAO,KACNF,EAAAC,QAAAC,cAACK,EAAAN,QAAU,CAACO,QAAS,SAAS,mHAEpBR,EAAAC,QAAAC,cAAC,OAAI,KAAC,WAAc,0LAI9BF,EAAAC,QAAAC,cAACa,EAAAd,QAAW,CAACe,WAAYtB,EAAAuB,YACvBjB,EAAAC,QAAAC,cAACgB,EAAAjB,QAAkB,OAErBD,EAAAC,QAAAC,cAACK,EAAAN,QAAU,CAACO,QAAS,QAASI,cAAA,GAAa,kXAM3CZ,EAAAC,QAAAC,cAACK,EAAAN,QAAU,CAACO,QAAS,QAASI,cAAA,GAAa,4VAUnDO,aAActB,EAAAuB,MAAMC,KACpBC,SAAUzB,EAAAuB,MAAMG,Y,6UCtDtB,IAAAlC,EAAAC,EAAA,kD,uBAAAD,EAAAmC,OAAAC,EAAA,eAAAP,EAAAjB,UAAAZ,EAAAmC,OAAAC,EAAA,kBAAA/B,EAAAgC,eAMarC,EAAAmC,OAAAC,EAAA,oBAAAC,IANb,IAAAhC,EAAAJ,EAAA,wB,sBAMO,MAAMoC,EAAa,kN,sHCN1B,IAAArC,EAAAC,EAAA,kD,uBAmEaD,EAAAmC,OAAAC,EAAA,oBAAAC,IAnEb,IAAAC,EAAArC,EAAA,uB,sBACAsC,EAAAtC,EAAA,wB,sBACAuC,EAAAvC,EAAA,wB,sBACAwC,EAAAxC,EAAA,0B,sBACAC,EAAAD,EAAA,4B,sBACAE,EAAAF,EAAA,S,sBACAyC,EAAAzC,EAAA,0B,sBAEwBmC,EAAAxB,QAAT,WACb,MAAO+B,EAAiBC,IAAsB,EAAAzC,EAAA0C,WAAS,IAChDC,EAAkBC,IAAuB,EAAA5C,EAAA0C,WAAS,IAClDG,EAAkBC,IAAuB,EAAA9C,EAAA0C,WAAS,IAClDK,EAAYC,IAAiB,EAAAhD,EAAA0C,WAAS,GAQ7C,OACElC,EAAAC,QAAAC,cAAC,MADH,CAEIO,MAAO,CACLgC,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB3C,EAAAC,QAAAC,cAAC0C,EAAA3C,QAAD,CACE4C,QAAS,iBACTC,KAAM,2DACNC,KAAMf,EACNgB,QAAS,IAAMf,GAAmB,KAEpCjC,EAAAC,QAAAC,cAAC+C,EAAAhD,QADC,CACQ8C,KAAMV,GACdrC,EAAAC,QAAAC,cAACgD,EAAAjD,QAAD,CAAOkD,SAAU,UAAW3C,QAAS,SAAUwC,QAAS,IAAMV,GAAoB,IAAQ,mDAI5FtC,EAAAC,QAAAC,cAACkD,EAAAnD,QAJ2F,CAIpFO,QAAS,YAAa6C,QA1Bf,KACjBpB,GAAmB,GACnBqB,YAAW,IAAMhB,GAAoB,IAAO,KAC5CgB,YAAW,IAAMlB,GAAoB,IAAO,KAC5CI,GAAc,EAAK,GAsBkC,YAGnDxC,EAAAC,QAAAC,cAAC0C,EAAA3C,QAHkD,CAIjD4C,QAAS,iBACTC,KAAM,IAAIS,MAAM,IACbC,KAAK,uFACLC,KAAK,MACRV,KAAMZ,EACNa,QAAS,IAAMZ,GAAoB,KAErCpC,EAAAC,QAAAC,cAACwD,EAAAzD,QADC,CACM8C,KAAMR,EAAYoB,OAAQ,QAASX,QAAS,IAAMR,GAAc,IACtExC,EAAAC,QAAAC,cAACK,EAAAN,QAAD,CACEO,QAAS,KACToD,GAAI,CACFC,OAAQ,CAAC,EAAG,KAEf,gBAGD7D,EAAAC,QAAAC,cAACkD,EAAAnD,QAHA,CAGO,aAAY,QAASoD,QAAS,IAAMb,GAAc,IAAQ,U,EAQnE,MAAMd,EAAa,00F","sources":["docs-source/Pages/Problem.tsx","docs-source/CodeSamples/UncontrolledModals/index.tsx","docs-source/CodeSamples/UncontrolledModals/UncontrolledModals.tsx"],"sourcesContent":["import Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport UncontrolledModals, { SourceCode } from \"../CodeSamples/UncontrolledModals\";\nimport CodePreview from \"../components/code/CodePreview\";\nimport PageWithContent from \"../components/layouts/PageWithContent\";\nimport { Pages } from \"../navigationData/pages\";\n\nexport default function Problem() {\n  const theme = useTheme();\n\n  return (\n    <PageWithContent\n      title={\"The Problem\"}\n      content={\n        <>\n          <Typography variant={\"body1\"}>\n            React applications are made up of components and each component can have its own state. The component\n            controls when and how its state is updated. Sometimes, a single event (such as successfully fetching some\n            data or clicking on a button) can cause independent state updates across multiple components. We have no way\n            of ordering or synchronising these state updates.\n          </Typography>\n\n          <section style={{ marginTop: theme.spacing(4) }}>\n            <Typography gutterBottom variant={\"h5\"} fontWeight={\"bold\"} component={\"h1\"}>\n              Why does it matter?\n            </Typography>\n            <article>\n              <Typography variant={\"body1\"}>\n                Components often use state updates to reflect UI changes. A very common use case is to show a popups by\n                using a <code>boolean</code> state variable. What happens if an event causes multiple popups to open up\n                together? Things can get pretty chaotic pretty fast. Too hard to visualise? Try clicking the button\n                below.\n              </Typography>\n              <CodePreview sourceCode={SourceCode}>\n                <UncontrolledModals />\n              </CodePreview>\n              <Typography variant={\"body1\"} gutterBottom>\n                This is just one example. In a complex React application, it is pretty common to have certain side\n                effects trigger state updates in a way that cannot be controlled. If there&apos;s no way to control the\n                state updates (like in the example above), user experience is seriously degraded. In fact, in React\n                Native, opening multiple modals at once can cause the app to freeze.\n              </Typography>\n              <Typography variant={\"body1\"} gutterBottom>\n                One way to solve this is to control how these states are updated by some logic and make them update one\n                by one. Trying to manage all such updates is not at all trivial. We need a synchronisation mechanism\n                which lets us control which state update is fired when. This hook lets you do that with minimum\n                configuration and maximum peace of mind.\n              </Typography>\n            </article>\n          </section>\n        </>\n      }\n      previousLink={Pages.Home}\n      nextLink={Pages.QuickStart}\n    />\n  );\n}\n","export { default, __sourceCode as SourceCode } from \"./UncontrolledModals\";\n\ndeclare module \"./UncontrolledModals\" {\n  export const __sourceCode: string;\n}\n","import Alert from \"@mui/material/Alert\";\nimport Button from \"@mui/material/Button\";\nimport Drawer from \"@mui/material/Drawer\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Typography from \"@mui/material/Typography\";\nimport React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\n\nexport default function UncontrolledModals() {\n  const [firstDialogOpen, setFirstDialogOpen] = useState(false);\n  const [secondDialogOpen, setSecondDialogOpen] = useState(false);\n  const [successAlertOpen, setSuccessAlertOpen] = useState(false);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const openModals = () => {\n    setFirstDialogOpen(true);\n    setTimeout(() => setSuccessAlertOpen(true), 500);\n    setTimeout(() => setSecondDialogOpen(true), 100);\n    setDrawerOpen(true);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Modal\n        heading={\"Dialog 1 title\"}\n        body={`Lorem ipsum dolor sit amet, consectetur adipiscing elit.`}\n        open={firstDialogOpen}\n        onClose={() => setFirstDialogOpen(false)}\n      />\n      <Snackbar open={successAlertOpen}>\n        <Alert severity={\"success\"} variant={\"filled\"} onClose={() => setSuccessAlertOpen(false)}>\n          Alert title: This is a success alert! Yoo-hoo!\n        </Alert>\n      </Snackbar>\n      <Button variant={\"contained\"} onClick={openModals}>\n        Click Me\n      </Button>\n      <Modal\n        heading={\"Dialog 2 title\"}\n        body={new Array(20)\n          .fill(`Praesent mattis a tellus suscipit venenatis. Morbi rutrum, elit in vulputate ornare`)\n          .join(\"\\n\")}\n        open={secondDialogOpen}\n        onClose={() => setSecondDialogOpen(false)}\n      />\n      <Drawer open={drawerOpen} anchor={\"right\"} onClose={() => setDrawerOpen(false)}>\n        <Typography\n          variant={\"h1\"}\n          sx={{\n            margin: [1, 2],\n          }}\n        >\n          Drawer title\n        </Typography>\n        <Button aria-label={\"close\"} onClick={() => setDrawerOpen(false)}>\n          Close\n        </Button>\n      </Drawer>\n    </div>\n  );\n}\n"],"names":["parcelHelpers","require","_typography","_react","_styles","_uncontrolledModals","_codePreview","_pageWithContent","_pages","theme","useTheme","_reactDefault","default","createElement","_pageWithContentDefault","title","content","Fragment","_typographyDefault","variant","style","marginTop","spacing","gutterBottom","fontWeight","component","_codePreviewDefault","sourceCode","SourceCode","_uncontrolledModalsDefault","previousLink","Pages","Home","nextLink","QuickStart","export","exports","__sourceCode","_alert","_button","_drawer","_snackbar","_modal","firstDialogOpen","setFirstDialogOpen","useState","secondDialogOpen","setSecondDialogOpen","successAlertOpen","setSuccessAlertOpen","drawerOpen","setDrawerOpen","display","alignItems","justifyContent","_modalDefault","heading","body","open","onClose","_snackbarDefault","_alertDefault","severity","_buttonDefault","onClick","setTimeout","Array","fill","join","_drawerDefault","anchor","sx","margin"],"version":3,"file":"Problem.fd74779f.js.map"}