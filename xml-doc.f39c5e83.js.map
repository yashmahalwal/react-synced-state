{"mappings":"yiCAAA,aAKA,SAASA,EAAOC,IACZ,SAAUC,GAOV,SAASC,EAAiBC,EAAMC,GAC1BH,EAAMI,UAAUF,IAClBF,EAAMI,UAAUC,aAAaH,EAAM,UAAW,CAC5C,cAAeC,G,CAIrB,IAAIG,EAAMN,EAAMI,UAAUG,OAAOD,IAC7BE,EAAkB,CACpBC,QAAO,WACPC,QAAQ,EACRC,MAAO,UACPC,OAAQ,CACNN,IAAKA,IAGLO,EAAiB,CACnBJ,QAAO,QACPC,QAAQ,EACRC,MAAO,UACPC,OAAQ,CACNN,IAAKA,IAGTL,EAAiB,SAAUO,GAC3BP,EAAiB,SAAUO,GAC3BP,EAAiB,QAASY,EAC3B,CAlCC,CAkCCd,E,CAtCLe,EAAOC,QAAUjB,EACjBA,EAAOkB,YAAc,SACrBlB,EAAOmB,QAAU,E","sources":["node_modules/refractor/lang/xml-doc.js"],"sourcesContent":["'use strict'\n\nmodule.exports = xmlDoc\nxmlDoc.displayName = 'xmlDoc'\nxmlDoc.aliases = []\nfunction xmlDoc(Prism) {\n  ;(function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        })\n      }\n    }\n    var tag = Prism.languages.markup.tag\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    insertDocComment('csharp', slashDocComment)\n    insertDocComment('fsharp', slashDocComment)\n    insertDocComment('vbnet', tickDocComment)\n  })(Prism)\n}\n"],"names":["xmlDoc","Prism1","Prism","insertDocComment","lang","docComment","languages","insertBefore","tag","markup","slashDocComment","pattern","greedy","alias","inside","tickDocComment","module","exports","displayName","aliases"],"version":3,"file":"xml-doc.f39c5e83.js.map"}