{"mappings":"2iCAAA,aACA,IAAIA,EAAgBC,EAAQ,aAI5B,SAASC,EAAMC,GAEX,IAAUC,EACNC,EAFNF,EAAMG,SAASN,GAETK,EAAM,gDADAD,EAqBTD,GAnBKI,UAAUL,MAAQE,EAAMG,UAAUC,OAAO,OAAQ,CACrDC,SAAU,CACR,CACEC,QAASC,OAAON,EAAOO,OAAS,aAChCC,QAAQ,GAEV,CACEH,QAAO,iEAEPI,MAAO,aAGXT,OAAQ,CACNK,QAASL,EACTQ,QAAQ,GAEVE,OAAM,+F,CAvBZC,EAAOC,QAAUf,EACjBA,EAAMgB,YAAc,QACpBhB,EAAMiB,QAAU,E","sources":["node_modules/refractor/lang/json5.js"],"sourcesContent":["'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = json5\njson5.displayName = 'json5'\njson5.aliases = []\nfunction json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern:\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number:\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    })\n  })(Prism)\n}\n"],"names":["refractorJson","require","json5","Prism1","Prism","string","register","languages","extend","property","pattern","RegExp","source","greedy","alias","number","module","exports","displayName","aliases"],"version":3,"file":"json5.d4ef9867.js.map"}